//
//  DispatchQueuViewController.swift
//  RoadTo_iOS
//
//  Created by Ë¨ùÈ£õÈ£õ on 2019/2/21.
//  Copyright ¬© 2019 Ë¨ùÈ£õÈ£õ. All rights reserved.
//

import UIKit

let totle = 10

class DispatchQueuViewController: UIViewController
{
    var sum = 0
    let q1 = DispatchQueue.init(label: "Q1")
    let q2 = DispatchQueue.init(label: "Q2")
    let q3 = DispatchQueue.init(label: "Q3")
    let q4 = DispatchQueue.init(label: "Q4")
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
//        trySync()
//        trySync2()
//        tryAsync()
        appCodaAsync()
    }
    
    func trySync()
    {
        for _ in 0 ..< totle
        {
            q1.sync {
                self.add(heart: "üß°")
            }
            q2.sync {
                self.add(heart: "üíõ")
            }
            q3.sync {
                self.add(heart: "üíö")
            }
            q4.sync {
                self.add(heart: "üíô")
            }
        }
    }
    
    func trySync2()
    {
        q1.sync {
            for _ in 0 ..< totle{
                self.add(heart: "üß°")
            }
        }
        q2.sync {
            for _ in 0 ..< totle{
                self.add(heart: "üíõ")
            }
        }
        q3.sync {
            for _ in 0 ..< totle{
                self.add(heart: "üíö")
            }
        }
        q4.sync {
            for _ in 0 ..< totle{
                self.add(heart: "üíô")
            }
        }
    }
    
    func tryAsync()
    {
        for _ in 0 ..< totle
        {
            q1.async {
                self.add(heart: "üß°")
            }
            q2.async {
                self.add(heart: "üíõ")
            }
            q3.async {
                self.add(heart: "üíö")
            }
            q4.async {
                self.add(heart: "üíô")
            }
        }
    }
    
    func tryDispatch()
    {
        //        let queue = DispatchQueue.init(label: "")
        let queue = DispatchQueue.init(label: "", attributes: .concurrent)
        
        //        //‰∏≤Ë°åÂêåÊ≠•, ÂêåÊ≠•ÊúÉÂ°ûËªäÊâÄ‰ª•ÁÖßÈ†ÜÂ∫è
        //        //‰∏¶Ë°åÂêåÊ≠•, Âêå‰∏ä
        //        queue.sync {
        //            print(1)
        //        }
        //        print(2)
        //        queue.sync {
        //            print(3)
        //        }
        //        print(4)
        
        //        //‰∏≤Ë°åÁï∞Ê≠•, Áï∞Ê≠•È†ÜÂ∫è‰∏çÂÆö, ‰ΩÜ‰∏ÄÂÆöÂÖà1ÂÜç3, ÂÖà2ÂÜç4, ÂÖà2ÂÜç3
        //        //‰∏¶Ë°åÁï∞Ê≠•, Âêå‰∏ä
        //        queue.async {
        //            print(1)
        //        }
        //        print(2)
        //        queue.async {
        //            print(3)
        //        }
        //        print(4)
        
        //        //‰∏≤Ë°åÁï∞Ê≠•ÂåÖÂêåÊ≠•, 152Ê≠ªÈéñ
        //        //‰∏¶Ë°åÁï∞Ê≠•ÂåÖÂêåÊ≠•, ÂêåÊ≠•Âè™ÊúÉÂ°û‰Ωè‰∏ÄÂÄãÁ∑öÁ®ã, Èñã‰∫ÜÂ§öÊ¢ù, ÊâÄ‰ª•‰∏çÊúÉÊ≠ªÈéñ, 15234or12534or12354or12345(5Ë∑ü234È†ÜÂ∫è‰∏çÂÆö)
        //        print(1)
        //        queue.async {
        //            print(2)
        //            queue.sync {
        //                print(3)
        //            }
        //            print(4)
        //        }
        //        print(5)
        
        //‰∏≤Ë°åÂêåÊ≠•ÂåÖÁï∞Ê≠•, 12345,12435,12453(3‰ªÄÈ∫ºÊôÇÂÄôÂõû‰æÜ‰∏çÁü•ÈÅì)
        //‰∏¶Ë°åÂêåÊ≠•ÂåÖÁï∞Ê≠•,       12435,12453
        print(1)
        queue.sync {
            print(2)
            queue.async {
                print(3)
            }
            print(4)
        }
        print(5)
    }
    
    func appCodaAsync()
    {
        let q1 = DispatchQueue(label: "1A", qos: .userInitiated)
        let q2 = DispatchQueue(label: "2B", qos: .userInitiated)
        
        q1.async {
            for i in 0 ..< totle
            {
                print("\(i)‚ù§Ô∏è")
            }
        }
        
        q2.async {
            for i in 0 ..< totle
            {
                print("\(i)üíú")
            }
        }
    }
    
    func add(heart: String)
    {
        sum += 1
        print("\(heart)\(self.sum)")
    }
}
